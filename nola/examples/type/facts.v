(** * Facts *)

From nola.examples.type Require Export deriv.

Section facts.
  Context `{!tintpGS L ฮฃ}.

  (** ** Behavior of [tintp] *)
  Fact tintp_nat {ฮด i v} : โฆ โ โง{i}(ฮด) v โฃโข โ n : nat, โv = # nโ.
  Proof. done. Qed.
  Fact tintp_bool {ฮด i v} : โฆ ๐น โง{i}(ฮด) v โฃโข โ b : bool, โv = # bโ.
  Proof. done. Qed.
  Fact tintp_unit {ฮด i v} : โฆ ๐ โง{i}(ฮด) v โฃโข โv = # ()โ.
  Proof. done. Qed.
  Fact tintp_and {ฮด i T U v} : โฆ T โงแต U โง{i}(ฮด) v โฃโข โฆ T โง(ฮด) v โ โฆ U โง(ฮด) v.
  Proof. done. Qed.
  Fact tintp_pair {ฮด i T U v} :
    โฆ T ร U โง{i}(ฮด) v โฃโข โ u u', โv = (u, u')%Vโ โ โฆ T โง(ฮด) u โ โฆ U โง(ฮด) u'.
  Proof. done. Qed.
  Fact tintp_fun `{! j โคโฟ i} {ฮด T U v} :
    โฆ T โ(j) U โง{i}(ฮด) v โฃโข โก โ u,
      โฆ T โง{i}(ฮด) u -โ WP[tinv_wsat ฮด j] v u [{ โฆ U โง{i}(ฮด) }].
  Proof. simpl. do 4 f_equiv. exact twpw_tinv_wsat_lt_tinv_wsat. Qed.
  Fact tintp_ref {ฮด i o j v} {T : _ (;แต)} :
    โฆ ref[o] T โง{i}(ฮด) v โฃโข โ l : loc, โv = # lโ โ tref (i:=j) ฮด (l +โ o) T.
  Proof. done. Qed.
  Fact tintp_guard {ฮด i j v} {T : _ (;แต)} :
    โฆ โฝ{j,_} T โง{i}(ฮด) v โฃโข tguard (i:=j) ฮด T v.
  Proof. done. Qed.
  Fact tintp_forall {ฮด i j T v} : โฆ โ: j, T โง{i}(ฮด) v โฃโข โ V, โฆ T /: V โง(ฮด) v.
  Proof. simpl. do 3 f_equiv. apply rew_eq_hwf. Qed.
  Fact tintp_exist {ฮด i j T v} : โฆ โ: j, T โง{i}(ฮด) v โฃโข โ V, โฆ T /: V โง(ฮด) v.
  Proof. simpl. do 3 f_equiv. apply rew_eq_hwf. Qed.
  Fact tintp_rec `{! j โคโฟ i} {ฮด T v} :
    โฆ recแต: j, T โง{i}(ฮด) v โฃโข โฆ T /: recแต: j, T โง(ฮด) v.
  Proof. rewrite/= rew_eq_hwf. exact tintp_tbump. Qed.
  Fact tintp_subu `{! j <โฟ i} {ฮด T v} : โฆ !แต T โง{i}(ฮด) v โฃโข โฆ T โง(ฮด) v.
  Proof. exact tintp_lt_tintp. Qed.
End facts.
